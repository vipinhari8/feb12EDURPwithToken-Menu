//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EduRp.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class edurp_devEntities : DbContext
    {
        public edurp_devEntities()
            : base("name=edurp_devEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ApplicationForm> ApplicationForms { get; set; }
        public virtual DbSet<ApplicationFormDetail> ApplicationFormDetails { get; set; }
        public virtual DbSet<ApplicationFormDocument> ApplicationFormDocuments { get; set; }
        public virtual DbSet<ApplicationFormExamResult> ApplicationFormExamResults { get; set; }
        public virtual DbSet<ApplicationFormFeeAssociation> ApplicationFormFeeAssociations { get; set; }
        public virtual DbSet<ApplicationFormField> ApplicationFormFields { get; set; }
        public virtual DbSet<ApplicationFormGroup> ApplicationFormGroups { get; set; }
        public virtual DbSet<ApplicationFormTemplate> ApplicationFormTemplates { get; set; }
        public virtual DbSet<BatchApplicationFormAssociation> BatchApplicationFormAssociations { get; set; }
        public virtual DbSet<BatchFeeAssociation> BatchFeeAssociations { get; set; }
        public virtual DbSet<BatchMaster> BatchMasters { get; set; }
        public virtual DbSet<BatchProgramStudyAssociation> BatchProgramStudyAssociations { get; set; }
        public virtual DbSet<BulkLoadMaster> BulkLoadMasters { get; set; }
        public virtual DbSet<ChapterMaster> ChapterMasters { get; set; }
        public virtual DbSet<ClassRoomMaster> ClassRoomMasters { get; set; }
        public virtual DbSet<CourseMaster> CourseMasters { get; set; }
        public virtual DbSet<CourseSubjectAssociation> CourseSubjectAssociations { get; set; }
        public virtual DbSet<EmployeeMaster> EmployeeMasters { get; set; }
        public virtual DbSet<ExaminationType> ExaminationTypes { get; set; }
        public virtual DbSet<Fee> Fees { get; set; }
        public virtual DbSet<ProgramStudy> ProgramStudies { get; set; }
        public virtual DbSet<ProgramStudyCourseAssociation> ProgramStudyCourseAssociations { get; set; }
        public virtual DbSet<ProgramStudyFeeAssociation> ProgramStudyFeeAssociations { get; set; }
        public virtual DbSet<RoleMaster> RoleMasters { get; set; }
        public virtual DbSet<ScreenMaster> ScreenMasters { get; set; }
        public virtual DbSet<SubjectChapterAssociation> SubjectChapterAssociations { get; set; }
        public virtual DbSet<SubjectMaster> SubjectMasters { get; set; }
        public virtual DbSet<Task> Tasks { get; set; }
        public virtual DbSet<TaskEmployeeAssociation> TaskEmployeeAssociations { get; set; }
        public virtual DbSet<tblFileBulkUploadRequest> tblFileBulkUploadRequests { get; set; }
        public virtual DbSet<Token> Tokens { get; set; }
        public virtual DbSet<UniversityMaster> UniversityMasters { get; set; }
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<UserUniversityAssociation> UserUniversityAssociations { get; set; }
    
        public virtual ObjectResult<GetAdmissionNumber_Result> GetAdmissionNumber(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> apptemplateid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var apptemplateidParameter = apptemplateid.HasValue ?
                new ObjectParameter("apptemplateid", apptemplateid) :
                new ObjectParameter("apptemplateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAdmissionNumber_Result>("GetAdmissionNumber", universityidParameter, useridParameter, tokenParameter, apptemplateidParameter);
        }
    
        public virtual ObjectResult<GetAppFormTemplateDetail_Result> GetAppFormTemplateDetail(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAppFormTemplateDetail_Result>("GetAppFormTemplateDetail", universityidParameter, jsontextParameter);
        }
    
        public virtual ObjectResult<GetApplicationFormDetail_Result> GetApplicationFormDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> apptemplateid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var apptemplateidParameter = apptemplateid.HasValue ?
                new ObjectParameter("apptemplateid", apptemplateid) :
                new ObjectParameter("apptemplateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApplicationFormDetail_Result>("GetApplicationFormDetail", universityidParameter, useridParameter, tokenParameter, apptemplateidParameter);
        }
    
        public virtual ObjectResult<GetApplicationFormDocumentDetail_Result> GetApplicationFormDocumentDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> apptemplateid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var apptemplateidParameter = apptemplateid.HasValue ?
                new ObjectParameter("apptemplateid", apptemplateid) :
                new ObjectParameter("apptemplateid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApplicationFormDocumentDetail_Result>("GetApplicationFormDocumentDetail", universityidParameter, useridParameter, tokenParameter, apptemplateidParameter);
        }
    
        public virtual int GetApplicationFormList(Nullable<int> universityid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetApplicationFormList", universityidParameter);
        }
    
        public virtual int GetBatchApplicationFormList(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBatchApplicationFormList", universityidParameter, jsontextParameter);
        }
    
        public virtual int GetBatchApplicationFormNotLinkedList(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetBatchApplicationFormNotLinkedList", universityidParameter, jsontextParameter);
        }
    
        public virtual ObjectResult<GetBatchDetail_Result> GetBatchDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> batchid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchDetail_Result>("GetBatchDetail", universityidParameter, useridParameter, tokenParameter, batchidParameter);
        }
    
        public virtual ObjectResult<GetBatchFeeNotLinkedList_Result> GetBatchFeeNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> batchid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchFeeNotLinkedList_Result>("GetBatchFeeNotLinkedList", universityidParameter, useridParameter, tokenParameter, batchidParameter);
        }
    
        public virtual ObjectResult<GetBatchFeesList_Result> GetBatchFeesList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> batchid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchFeesList_Result>("GetBatchFeesList", universityidParameter, useridParameter, tokenParameter, batchidParameter);
        }
    
        public virtual ObjectResult<GetBatchID_Result> GetBatchID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchID_Result>("GetBatchID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetBatchList_Result> GetBatchList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchList_Result>("GetBatchList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetBatchProgramStudyList_Result> GetBatchProgramStudyList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> batchid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchProgramStudyList_Result>("GetBatchProgramStudyList", universityidParameter, useridParameter, tokenParameter, batchidParameter);
        }
    
        public virtual ObjectResult<GetBatchProgramStudyNotLinkedList_Result> GetBatchProgramStudyNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> batchid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var batchidParameter = batchid.HasValue ?
                new ObjectParameter("batchid", batchid) :
                new ObjectParameter("batchid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBatchProgramStudyNotLinkedList_Result>("GetBatchProgramStudyNotLinkedList", universityidParameter, useridParameter, tokenParameter, batchidParameter);
        }
    
        public virtual ObjectResult<GetBulkData_Result> GetBulkData(Nullable<int> universityid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBulkData_Result>("GetBulkData", universityidParameter);
        }
    
        public virtual ObjectResult<GetBulkLoadDetail_Result> GetBulkLoadDetail(Nullable<int> universityid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBulkLoadDetail_Result>("GetBulkLoadDetail", universityidParameter);
        }
    
        public virtual ObjectResult<GetBulkLoadDetailById_Result> GetBulkLoadDetailById(Nullable<int> universityid, Nullable<int> bulkLoadMasterId)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var bulkLoadMasterIdParameter = bulkLoadMasterId.HasValue ?
                new ObjectParameter("BulkLoadMasterId", bulkLoadMasterId) :
                new ObjectParameter("BulkLoadMasterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBulkLoadDetailById_Result>("GetBulkLoadDetailById", universityidParameter, bulkLoadMasterIdParameter);
        }
    
        public virtual ObjectResult<GetChapterDetail_Result> GetChapterDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> chapterid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var chapteridParameter = chapterid.HasValue ?
                new ObjectParameter("chapterid", chapterid) :
                new ObjectParameter("chapterid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChapterDetail_Result>("GetChapterDetail", universityidParameter, useridParameter, tokenParameter, chapteridParameter);
        }
    
        public virtual ObjectResult<GetChapterID_Result> GetChapterID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChapterID_Result>("GetChapterID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetChapterList_Result> GetChapterList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChapterList_Result>("GetChapterList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetClassRoomDetail_Result> GetClassRoomDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> classroomid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var classroomidParameter = classroomid.HasValue ?
                new ObjectParameter("classroomid", classroomid) :
                new ObjectParameter("classroomid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassRoomDetail_Result>("GetClassRoomDetail", universityidParameter, useridParameter, tokenParameter, classroomidParameter);
        }
    
        public virtual ObjectResult<GetClassRoomList_Result> GetClassRoomList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClassRoomList_Result>("GetClassRoomList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetCourseDetail_Result> GetCourseDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> courseid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseDetail_Result>("GetCourseDetail", universityidParameter, useridParameter, tokenParameter, courseidParameter);
        }
    
        public virtual ObjectResult<GetCourseID_Result> GetCourseID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseID_Result>("GetCourseID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetCourseList_Result> GetCourseList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseList_Result>("GetCourseList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetCourseSubjectList_Result> GetCourseSubjectList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> courseid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseSubjectList_Result>("GetCourseSubjectList", universityidParameter, useridParameter, tokenParameter, courseidParameter);
        }
    
        public virtual ObjectResult<GetCourseSubjectNotLinkedList_Result> GetCourseSubjectNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> courseid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var courseidParameter = courseid.HasValue ?
                new ObjectParameter("courseid", courseid) :
                new ObjectParameter("courseid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseSubjectNotLinkedList_Result>("GetCourseSubjectNotLinkedList", universityidParameter, useridParameter, tokenParameter, courseidParameter);
        }
    
        public virtual ObjectResult<GetExaminationDetail_Result> GetExaminationDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> examinationid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var examinationidParameter = examinationid.HasValue ?
                new ObjectParameter("examinationid", examinationid) :
                new ObjectParameter("examinationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExaminationDetail_Result>("GetExaminationDetail", universityidParameter, useridParameter, tokenParameter, examinationidParameter);
        }
    
        public virtual ObjectResult<GetExaminationList_Result> GetExaminationList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExaminationList_Result>("GetExaminationList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetFeeDetail_Result> GetFeeDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> feeid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var feeidParameter = feeid.HasValue ?
                new ObjectParameter("feeid", feeid) :
                new ObjectParameter("feeid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeeDetail_Result>("GetFeeDetail", universityidParameter, useridParameter, tokenParameter, feeidParameter);
        }
    
        public virtual ObjectResult<GetFeeList_Result> GetFeeList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFeeList_Result>("GetFeeList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyCourseList_Result> GetProgramStudyCourseList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> programstudyid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var programstudyidParameter = programstudyid.HasValue ?
                new ObjectParameter("programstudyid", programstudyid) :
                new ObjectParameter("programstudyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyCourseList_Result>("GetProgramStudyCourseList", universityidParameter, useridParameter, tokenParameter, programstudyidParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyCourseNotLinkedList_Result> GetProgramStudyCourseNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> programstudyid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var programstudyidParameter = programstudyid.HasValue ?
                new ObjectParameter("programstudyid", programstudyid) :
                new ObjectParameter("programstudyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyCourseNotLinkedList_Result>("GetProgramStudyCourseNotLinkedList", universityidParameter, useridParameter, tokenParameter, programstudyidParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyDetail_Result> GetProgramStudyDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> programstudyid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var programstudyidParameter = programstudyid.HasValue ?
                new ObjectParameter("programstudyid", programstudyid) :
                new ObjectParameter("programstudyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyDetail_Result>("GetProgramStudyDetail", universityidParameter, useridParameter, tokenParameter, programstudyidParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyFeesList_Result> GetProgramStudyFeesList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> programstudyid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var programstudyidParameter = programstudyid.HasValue ?
                new ObjectParameter("programstudyid", programstudyid) :
                new ObjectParameter("programstudyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyFeesList_Result>("GetProgramStudyFeesList", universityidParameter, useridParameter, tokenParameter, programstudyidParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyFeesNotLinkedList_Result> GetProgramStudyFeesNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> programstudyid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var programstudyidParameter = programstudyid.HasValue ?
                new ObjectParameter("programstudyid", programstudyid) :
                new ObjectParameter("programstudyid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyFeesNotLinkedList_Result>("GetProgramStudyFeesNotLinkedList", universityidParameter, useridParameter, tokenParameter, programstudyidParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyID_Result> GetProgramStudyID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyID_Result>("GetProgramStudyID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetProgramStudyList_Result> GetProgramStudyList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProgramStudyList_Result>("GetProgramStudyList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetSubjectChapterList_Result> GetSubjectChapterList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> subjectid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var subjectidParameter = subjectid.HasValue ?
                new ObjectParameter("subjectid", subjectid) :
                new ObjectParameter("subjectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectChapterList_Result>("GetSubjectChapterList", universityidParameter, useridParameter, tokenParameter, subjectidParameter);
        }
    
        public virtual ObjectResult<GetSubjectChapterNotLinkedList_Result> GetSubjectChapterNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> subjectid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var subjectidParameter = subjectid.HasValue ?
                new ObjectParameter("subjectid", subjectid) :
                new ObjectParameter("subjectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectChapterNotLinkedList_Result>("GetSubjectChapterNotLinkedList", universityidParameter, useridParameter, tokenParameter, subjectidParameter);
        }
    
        public virtual ObjectResult<GetSubjectDetail_Result> GetSubjectDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> subjectid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var subjectidParameter = subjectid.HasValue ?
                new ObjectParameter("subjectid", subjectid) :
                new ObjectParameter("subjectid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectDetail_Result>("GetSubjectDetail", universityidParameter, useridParameter, tokenParameter, subjectidParameter);
        }
    
        public virtual ObjectResult<GetSubjectID_Result> GetSubjectID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectID_Result>("GetSubjectID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetSubjectList_Result> GetSubjectList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSubjectList_Result>("GetSubjectList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetTaskDetail_Result> GetTaskDetail(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> taskid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskDetail_Result>("GetTaskDetail", universityidParameter, useridParameter, tokenParameter, taskidParameter);
        }
    
        public virtual ObjectResult<GetTaskID_Result> GetTaskID(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskID_Result>("GetTaskID", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetTaskList_Result> GetTaskList(Nullable<int> universityid, Nullable<int> userid, string token)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskList_Result>("GetTaskList", universityidParameter, useridParameter, tokenParameter);
        }
    
        public virtual ObjectResult<GetTaskStaffList_Result> GetTaskStaffList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> taskid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskStaffList_Result>("GetTaskStaffList", universityidParameter, useridParameter, tokenParameter, taskidParameter);
        }
    
        public virtual ObjectResult<GetTaskStaffNotLinkedList_Result> GetTaskStaffNotLinkedList(Nullable<int> universityid, Nullable<int> userid, string token, Nullable<int> taskid)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var tokenParameter = token != null ?
                new ObjectParameter("token", token) :
                new ObjectParameter("token", typeof(string));
    
            var taskidParameter = taskid.HasValue ?
                new ObjectParameter("taskid", taskid) :
                new ObjectParameter("taskid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTaskStaffNotLinkedList_Result>("GetTaskStaffNotLinkedList", universityidParameter, useridParameter, tokenParameter, taskidParameter);
        }
    
        public virtual int LinkBatchApplicationForm(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkBatchApplicationForm", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkBatchFees(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkBatchFees", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkBatchProgramStudy(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkBatchProgramStudy", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkCourseSubject(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkCourseSubject", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkProgramStudyCourse(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkProgramStudyCourse", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkProgramStudyFees(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkProgramStudyFees", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkSubjectChapter(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkSubjectChapter", universityidParameter, jsontextParameter);
        }
    
        public virtual int LinkTaskStaff(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LinkTaskStaff", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveApplicationForm(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveApplicationForm", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveBatch(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveBatch", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveChapter(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveChapter", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveClassRoom(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveClassRoom", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveCourse(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveCourse", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveExamination(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveExamination", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveFee(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveFee", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveProgramStudy(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveProgramStudy", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveSubject(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveSubject", universityidParameter, jsontextParameter);
        }
    
        public virtual int RemoveTask(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveTask", universityidParameter, jsontextParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> testAppForm()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("testAppForm");
        }
    
        public virtual int UnLinkBatchApplicationForm(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkBatchApplicationForm", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkBatchFees(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkBatchFees", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkBatchProgramStudy(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkBatchProgramStudy", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkCourseSubject(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkCourseSubject", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkProgramStudyCourse(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkProgramStudyCourse", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkProgramStudyFees(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkProgramStudyFees", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkSubjectChapter(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkSubjectChapter", universityidParameter, jsontextParameter);
        }
    
        public virtual int UnLinkTaskStaff(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UnLinkTaskStaff", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateApplicationForm(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateApplicationForm", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateApplicationFormDocument(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateApplicationFormDocument", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateBatch(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBatch", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateChapter(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateChapter", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateClassRoom(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateClassRoom", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateCourse(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourse", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateExamination(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExamination", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateFee(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFee", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateProgramStudy(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProgramStudy", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateSubject(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSubject", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateSubject_Test(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSubject_Test", universityidParameter, jsontextParameter);
        }
    
        public virtual int UpdateTask(Nullable<int> universityid, string jsontext)
        {
            var universityidParameter = universityid.HasValue ?
                new ObjectParameter("universityid", universityid) :
                new ObjectParameter("universityid", typeof(int));
    
            var jsontextParameter = jsontext != null ?
                new ObjectParameter("jsontext", jsontext) :
                new ObjectParameter("jsontext", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTask", universityidParameter, jsontextParameter);
        }
    }
}
